#!/bin/bash
#
# tfinclude is an include tf file generator for Terraform/Terragrunt.
#
# Copyright (c) 2022 Jun Futagawa (jfut)
#
# This software is released under the MIT License.
# http://opensource.org/licenses/mit-license.php

set -euo pipefail

VERSION="v1.0.0"

# Usage
usage() {
    cat << _EOF_
Usage:
    $(basename ${0}) -s SOURCE_DIR [-r SOURCE_REGEX] [-o OUTPUT_FILE]

    Options:
        -s Source directory, ex: include/
        -r Regular expression(regex type: egrep) for file path, default: ".*\.(tf|hcl)$")
        -o Output file, default: generated_include.tf

    Examples:
        Generate generated_include.tf file from include/*.tf|.hcl files
            $(basename ${0}) -s include/
        Generate path/to/include.tf file from include/*.hcl files
            $(basename ${0}) -s include/ -r ".*\.hcl$" -o path/to/include.tf
_EOF_
}

generate_include_tf_file() {
    local SOURCE_DIR=${1:-}
    local SOURCE_REGEX=${2:-}
    local OUTPUT_FILE=${3:-}

    cat << _EOF_ > "${OUTPUT_FILE}"
# Generated by tfinclude.
# SOURCE_DIR: ${SOURCE_DIR}
# SOURCE_REGEX: ${SOURCE_REGEX}

_EOF_

    find "${SOURCE_DIR}" -type f -regextype egrep -regex "${SOURCE_REGEX}" \
        | xargs cat >> "${OUTPUT_FILE}"
}

# Main
main() {
    [[ $# -lt 1 ]] && usage && exit 1

    SOURCE_DIR=""
    SOURCE_REGEX=".*\.(tf|hcl)$"
    OUTPUT_FILE="generated_include.tf"
    while getopts s:r:o:vh OPT; do
        case "${OPT}" in
            "s" )
                SOURCE_DIR="${OPTARG}" ;;
            "r" )
                SOURCE_REGEX="${OPTARG}" ;;
            "o" )
                OUTPUT_FILE="${OPTARG}" ;;
            "v" )
                echo "$(basename ${0}) ${VERSION}"
                exit 0
                ;;
            "h" )
                usage
                exit 0
                ;;
            * )
                usage
                exit 1
                ;;
        esac
    done
    shift $((OPTIND - 1))

    if [[ -z "${SOURCE_DIR}" ]]; then
        usage && exit 1
    fi

    generate_include_tf_file "${SOURCE_DIR}" "${SOURCE_REGEX}" "${OUTPUT_FILE}"
}

[[ ${#BASH_SOURCE[@]} = 1 ]] && main "${@}"
